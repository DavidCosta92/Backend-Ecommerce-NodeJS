paths:
  /api/users/:
    post:
      summary: Creates a new user 
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/NewUser'
      responses:
        "201":
          description: Will be send a set-cookie header with key authtoken and value User'JWT", in order to be "logued in". This JWT expires in 24hs since creation.
        "409":
          description: Status code 409, indicates that already exist an user with provided credentials.
    get:
      summary: Return all existing users.
      tags:
        - Users
      responses:
        "200":
          description: Indicates a successfull request
        "401":
          description: Status code 401, indicates that there is not a logued user.
        "403":
          description: Status code 403, indicates that user who is trying to delete must be an admin.
        "404":
          description: Status code 404, indicates that user doesn`t exist.
    delete:
      summary: Delete those users who were inactive in the last 48hs by default. 
      tags:
        - Users
      parameters:
      - name: period
        in: path
        description: Period to filter those users to be deleted, this value is indicated en miliseconds. For example, for one day, it would be 86400000.
        required: false
        type: string
      responses:
        "200":
          description: Indicates a successfull deletion of inactive users, even if there aren`t users to delete
        "403":
          description: Status code 403, indicates that user who is trying to delete must be an admin.
  /api/users/{uid}:
    get:
      summary: Return user by Id.
      tags:
        - Users
      parameters:
      - name: id
        in: path
        description: Id of user.
        required: false
        type: string
      responses:
        "200":
          description: Indicates a successfull request
        "401":
          description: Status code 401, indicates that there is not a logued user.
        "403":
          description: Status code 403, indicates that logued user must be an admin.
        "404":
          description: Status code 404, indicates that user is not found. 
    delete:
      summary: Delete an user by Id
      tags:
        - Users
      responses:
        "200":
          description: Indicates a successfull deletion of user
        "401":
          description: Status code 401, indicates that there is not a logued user.
        "403":
          description: Status code 403, indicates that user who is trying to delete must be an admin.
        "404":
          description: Status code 404, indicates that user doesn`t exist.
  /api/users/premium/:
    get:
      summary: Obtain all users with basic info, for role manage.
      tags:
        - Users
      responses:
        "200":
          description: All users with email, name, last connection, and role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleUsers'
        "401":
          description: Status code 401, indicates that there is not a logued user.
        "403":
          description: Status code 403, indicates that logued user must be an admin.
  /api/users/premium/{uid}:
    put:
      summary: "Change the role of a user by their ID - The user must have documents with names in which the following keywords are included: 'identificacion', 'domicilio', and 'cuenta'."
      tags:
        - Users
      responses:
        "200":
          description: Indicates a successfull request
        "401":
          description: Status code 401, indicates that there is not a logued user.
        "403":
          description: Status code 403, indicates that THE REQUIRED DOCUMENTS ARE STILL INCOMPLETE.
        "404":
          description: Status code 404, indicates that user is not found. 